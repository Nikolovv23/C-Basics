// You are invited by the academy to write software to calculate the points for an actor / actress. The academy will give you initial points for the actor. 
// Then each evaluator will give his evaluation. The points that the actor receives are formed by: the length of the evaluator's name multiplied
// by the points he gives divided by two. If the result at some point exceeds 1250.5 the program must be interrupted and it must be printed 
// that the actor has received a nomination.

// Entrance
// ⦁ Actor's name - text
// ⦁ Academy points - real number in the interval [2.0 ... 450.5]
// ⦁ Number of estimators n - integer in the interval [1… 20]
// The next n number of rows:
// ⦁ Name of the evaluator - text
// ⦁ Assessor points - real number in the range [1.0 ... 50.0]

// Exit
// Print one line on the console:
// ⦁ If the points are above 1250.5:
// "Congratulations, {actor's name} got a nominee for leading role with {points}!"
// ⦁ If the points are not enough:
// "Sorry, {actor's name} you need {need points} more!"
// The result should be formatted to the first digit after the decimal point!

using System;
namespace Oscar
{
    internal class Program
    {
        static void Main(string[] args)
        {
            string name = Console.ReadLine();
            double points = double.Parse(Console.ReadLine());
            int judge = int.Parse(Console.ReadLine());
           

            for (int i = 0; i < judge;  i++)
            {
                string judgeName = Console.ReadLine();
                double pointsFromJudge = double.Parse(Console.ReadLine());

                points += (judgeName.Length * pointsFromJudge/2);

                if (points> 1250.50)
                {
                    break;
                }
            }   
            if (points > 1250.50)
            {
                Console.WriteLine($"Congratulations, {name} got a nominee for leading role with {points:f1}!");
            }
            else
            {
                Console.WriteLine($"Sorry, {name} you need {1250.50 - points:f1} more!");
            }
        }
    }
}
